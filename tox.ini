[tox]
envlist =
    pre-commit
    py37
    py37-{setproctitle,uvloop}
    py38
    py38-{setproctitle,uvloop}
    py39
    py39-{setproctitle,uvloop}
    pypy3
    pypy3-{setproctitle,uvloop}
    pyston-2.2
    pyston-2.2-{setproctitle,uvloop}
    pyston-2.3
    pyston-2.3-{setproctitle,uvloop}
    build
    docs
    lint
    man
    poetry
    publish
    setuppy
    shellcheck
    coverage-report
    watch
isolated_build = True

[gh-actions]
python =
    3.7: py37, py37-{setproctitle,uvloop}
    3.8: py38, py38-{setproctitle,uvloop}
    3.9: py39, py39-{setproctitle,uvloop}
    pypy-3.7: pypy3, pypy3-{setproctitle,uvloop}
    pyston-3: pyston-3, pyston-3-{setproctitle,uvloop}

[testenv]
setenv = VIRTUALENV_NO_DOWNLOAD=1
parallel_show_output = true
deps =
    setproctitle: setproctitle
    uvloop: uvloop
extras = tests
commands = coverage run --parallel -m pytest \
    --cache-clear \
    --verbose blackhole tests

[testenv:{py37,py37-setproctitle,py37-uvloop}]
basepython = python3.7
extras = tests
setenv = PYTHONWARNINGS=d

[testenv:{py38,py38-setproctitle,py38-uvloop}]
basepython = python3.8
extras = tests
setenv = PYTHONWARNINGS=d

[testenv:{py39,py39-setproctitle,py39-uvloop}]
basepython = python3.9
extras = tests
setenv = PYTHONWARNINGS=d

[testenv:{pypy3,pypy3-setproctitle,pypy3-uvloop}]
basepython = pypy3
extras = tests
setenv = PYTHONWARNINGS=d

[testenv:{pyston-3,pyston-3-setproctitle,pyston-3-uvloop}]
basepython = pyston3
extras = tests
setenv = PYTHONWARNINGS=d

[testenv:watch]
extras = tests
deps =
    pytest-testmon
    pytest-watch
commands = ptw -- --testmon \
    --cache-clear \
    --verbose blackhole tests

[testenv:build]
skip_install = True
deps = poetry
commands = poetry build

[testenv:coverage-report]
deps = coverage
skip_install = true
commands =
    coverage combine
    coverage xml
    coverage report

[testenv:docs]
extras = docs
changedir = docs/source
commands =
    sphinx-build -j 4 -d {envtmpdir}/doctrees . {envtmpdir}/html -c .

[testenv:lint]
skip_install = true
extras = tests
deps =
    black
    flake8
    flake8-bugbear
    flake8-isort
    flake8-commas
    pyroma
    interrogate
    bandit
    pydocstyle
    doc8
    codespell
    vulture
commands =
    flake8 blackhole tests setup.py docs/source/conf.py
    black --check --verbose blackhole tests setup.py docs/source/conf.py
    interrogate blackhole
    pyroma .
    bandit -r blackhole
    pydocstyle blackhole
    doc8 docs/source
    codespell --skip="./.tox,./docs/source/_extra,./docs/source/_static"
    vulture --min-confidence 100 blackhole tests

[testenv:man]
skip_install = True
deps = docutils
commands =
    rst2man.py man/source/blackhole.rst {envtmpdir}/blackhole.1
    rst2man.py man/source/blackhole_config.rst {envtmpdir}/blackhole_config.1

[testenv:manifest]
deps = check-manifest
skip_install = true
commands = check-manifest

[testenv:poetry]
skip_install = True
deps = poetry
commands =
    poetry check
    poetry install

[testenv:pre-commit]
skip_install = true
deps = pre-commit
commands = pre-commit run --all-files --verbose

[testenv:publish]
skip_install = True
deps = poetry
commands =
    poetry build
    poetry publish

[testenv:setuppy]
deps =
    docutils
    readme_renderer
skip_install = true
commands = python setup.py check -r -s -m

[testenv:shellcheck]
skip_install = true
whitelist_externals = shellcheck
commands = shellcheck -x \
    scripts/minify.sh \
    scripts/update-libuv.sh \
    bash-completion/blackhole-completion.bash \
    init.d/debian-ubuntu/blackhole
