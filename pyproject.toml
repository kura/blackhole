[build-system]
requires = ["setuptools>=41.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 79
target-version = ['py37', 'py38', 'py39']

[tool.poetry]
name = "blackhole"
version = "2.1.16"
description = "Blackhole is an MTA (message transfer agent) that (figuratively) pipes all mail to /dev/null."
authors = ["Kura <kura@kura.gg>"]
license ="MIT"
readme = "README.rst"
homepage = "https://kura.github.io/blackhole/"
repository = "https://github.com/kura/blackhole"
documentation = "https://kura.github.io/blackhole/"
keywords = [
    "blackhole",
    "asyncio",
    "smtp",
    "mta",
    "email"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Unix",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Communications :: Email",
    "Topic :: Communications :: Email :: Mail Transport Agents",
    "Topic :: Education :: Testing",
    "Topic :: Internet",
    "Topic :: Software Development",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Testing :: Traffic Generation",
    "Topic :: System :: Networking",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
]
include = [
    "bash-completion/blackhole-completion.bash",
    "CHANGELOG.rst",
    "CODE_OF_CONDUCT.rst",
    "CONTRIBUTING.rst",
    "CONTRIBUTORS.rst",
    "example.conf",
    "LICENSE",
    "README.rst",
    "THANKS.rst",
    "TODO.rst"
]

[tool.poetry.scripts]
blackhole = "blackhole.application:run"
blackhole_config = "blackhole.application:blackhole_config"

[tool.poetry.dependencies]
python = ">3.6.1, <4"
uvloop = {version = "^0.14.0", optional = true}
setproctitle = {version = "^1.1.10", optional = true}
coverage = {version = "^5.1", optional = true}
pytest = {version = "^5.4.2", optional = true}
pytest-asyncio = {version = "^0.12.0", optional = true}
pytest-cov = {version = "^2.8.1", optional = true}
pytest-clarity = {version = "^0.3.0-alpha.0", optional = true}
sphinx = {version = "^3.0.3", optional = true}
guzzle_sphinx_theme = {version = "^0.7.11", optional = true}
tox = {version = "^3.15.0", optional = true}
pre-commit = {version = "^2.4.0", optional = true}
interrogate = {version = "^1.3.0", optional = true}
pyroma = {version = "^2.6", optional = true}
bandit = {version = "^1.6.2", optional = true}
black = {version = "^20.8b1", optional = true}
flake8 = {version = "^3.8.3", optional = true}
flake8-bugbear = {version = "^20.1.4", optional = true}
flake8-isort = {version = "^4.0.0", optional = true}
flake8-commas = {version = "^2.0.0", optional = true}
pydocstyle = {version = "^5.1.0", optional = true}
doc8 = {version = "^0.8.1", optional = true}

[tool.poetry.extras]
uvloop = ["uvloop"]
setproctitle = ["setproctitle"]
docs = [
    "sphinx",
    "guzzle_sphinx_theme"
]
tests = [
    "black",
    "coverage",
    "pytest",
    "pytest-asyncio",
    "pytest-clarity",
    "pytest-cov",
    "flake8",
    "flake8-bugbear",
    "flake8-isort",
    "flake8-commas",
    "interrogate",
    "pyroma",
    "bandit",
    "pydocstyle",
    "doc8",
]
dev = [
    "uvloop",
    "setproctitle",
    "sphinx",
    "guzzle_sphinx_theme",
    "black",
    "coverage",
    "pytest",
    "pytest-asyncio",
    "pytest-clarity",
    "pytest-cov",
    "flake8",
    "flake8-bugbear",
    "flake8-isort",
    "flake8-commas",
    "pydocstyle",
    "doc8",
    "interrogate",
    "pyroma",
    "bandit",
    "tox",
    "pre-commit"
]

[tool.pytest]
minversion = 3.10
strict = true
addopts = "-ra"
testpaths = "tests"
filterwarnings = "once::Warning"

[tool.isort]
include_trailing_comma = true
lines_after_imports = 2
multi_line_output = 3
skip_glob = "*/tests/*.py"
known_first_party = "blackhole"
known_third_party = [
    "guzzle_sphinx_theme",
    "pytest",
    "setproctitle",
    "uvloop"
]
sections = "STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"

[tool.interrogate]
ignore-init-method = true
ignore-init-module = false
ignore-magic = false
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = true
ignore-module = false
fail-under = 95
exclude = ["setup.py", "docs", "build"]
ignore-regex = ["^get$", "^mock_.*", ".*BaseClass.*"]
verbose = 0
quiet = false
whitelist-regex = []
color = true
