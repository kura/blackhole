language: python
cache: pip
dist: xenial
sudo: required
install:
  - make install
after_success:
  - codecov
after_failure:
  - pip freeze
env:
    global:
      - TWINE_USERNAME: kura
      # TWINE_PASSWORD:
      - secure: "Bd63ijidRb6vsEnMEDI1lUKNlSegrorisBttzXyucEisl0cu0FfahIuFoXmXL0NeTSpDKYb5HZoqC0J+7LXZep8ZkuV/8H/8j//J1ja3qCIsbfqqklNEYkfe0nO7uGyYkg/exLLZGqJVXeS5+xedPyW+LsDJ5XFYe/dMx6FAfZI="

matrix:
  fast_finish: true
  include:

  # cpython/asyncio (3.6)
  - python: '3.6'
    script: make test
    env: NAME="cpython/asyncio (3.6)"
    deploy:
      provider: script
      script: scripts/release.sh
      on:
        tags: true

  # cpython/uvloop (3.6)
  - python: '3.6'
    sudo: true
    env: NAME="cpython/uvloop (3.6)"
    before_install:
      - git clone https://github.com/libuv/libuv.git
      - pushd libuv/
      - git checkout $(git describe --tags)
      - sh autogen.sh
      - "./configure"
      - make
      - sudo make install
      - popd
    install:
      - make install
      - pip install uvloop
    script: make test

  # cpython/asyncio (3.7)
  - python: '3.7-dev'
    script: make test
    env: NAME="cpython/asyncio (3.7)"
    deploy:
      provider: script
      script: scripts/release.sh
      on:
        tags: true

  # cpython/uvloop (3.7)
  - python: '3.7-dev'
    sudo: true
    env: NAME="cpython/uvloop (3.7)"
    before_install:
      - git clone https://github.com/libuv/libuv.git
      - pushd libuv/
      - git checkout $(git describe --tags)
      - sh autogen.sh
      - "./configure"
      - make
      - sudo make install
      - popd
    install:
      - make install
      - pip install uvloop
    script: make test


  # docs (3.6)
  - python: '3.6'
    script: make docs
    env: NAME="docs (3.6)"
    deploy:
      provider: pages
      skip_cleanup: true
      github_token:
        secure: "FGNxmBm5Zr2oLHK13HgqGKPFQKGrILvBUeC9F655V3hBTcOD9BXyeABwF0yvnGSS/1J/sQVNn71uRbZDfmxd/YTT8/5yK4yeuAiT1pnKcMppYaBA/691e9Uz9hB4yfivir/+ZWSlPMQJ2IiLvY6aBfJwwrNtiB5biWQiTlW+5aI="
      local_dir: docs/build
      on:
        branch: master

  # man
  - install: skip
    env: NAME="man"
    script: make man

  # build sdist/wheel (3.6)
  - python: '3.6'
    install: skip
    env: NAME="build sdist/wheel (3.6)"
    script: make build

  # pipfile (3.6)
  - python: '3.6'
    install: skip
    env: NAME="pipfile (3.6)"
    script: make pipfile

  # shellcheck
  - language: generic
    env: NAME="shellcheck"
    install: skip
    addons:
      apt:
        sources:
          - debian-sid
    before-script:
      - "sudo apt-get install cabal-install"
      - "cabal update"
      - "cabal install shellcheck"
    script: make shellcheck
